{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1: Investigating the Range as a Function of the Angle of Projection 1. Motivation Projectile motion is an essential concept in physics, describing the motion of an object launched into the air under the influence of gravity. This project investigates how the range of a projectile depends on its launch angle. Understanding this relationship is crucial for applications like sports and engineering. 2. Theory The range \\( R \\) of a projectile launched with initial velocity \\( v_0 \\) at an angle \\( \\theta \\) is given by the equation: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Where: - \\( v_0 \\) = Initial velocity (m/s) - \\( \\theta \\) = Launch angle (degrees) - \\( g \\) = Gravitational acceleration (9.81 m/s\u00b2) This formula shows that the range of a projectile depends on the launch angle, and is maximized at 45\u00b0. 3. Python Code The following Python code simulates projectile motion and calculates the range for different launch angles. The code also plots the range as a function of the angle. ```python import numpy as np import matplotlib.pyplot as plt Constants v0 = 20 # Initial velocity in m/s g = 9.81 # Gravitational acceleration in m/s\u00b2 Angle values (0 to 90 degrees) angles_deg = np.linspace(0, 90, 500) # Generating angles between 0\u00b0 and 90\u00b0 angles_rad = np.radians(angles_deg) # Converting angles from degrees to radians Calculating the range for each angle ranges = (v0**2) * np.sin(2 * angles_rad) / g Plotting the graph plt.figure(figsize=(10, 6)) plt.plot(angles_deg, ranges, label=f'v\u2080 = {v0} m/s') # Range vs angle plot plt.axvline(45, color='red', linestyle='--', label='Max Range at 45\u00b0') # Highlight 45\u00b0 plt.title(\"Projectile Range vs. Angle of Projection\") plt.xlabel(\"Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.legend() Save the plot as an image plt.savefig('Problem_1/projectile_range.png') Show the plot plt.show() Step 3: Run the Python Code Next, let's write and run the Python code that simulates the projectile motion and generates the plot. Run the Python code : This will create a graph and save it as projectile_range.png . The code will produce a plot and save it in the Problem_1 folder. Step 4: Upload the Image to GitHub Once you have the image ( projectile_range.png ), upload it to your GitHub repository : Go to your GitHub repository and navigate to the Problem_1 folder. Upload the image file ( projectile_range.png ) into the Problem_1 folder. Alternatively, if you\u2019re working locally, you can copy the image into the appropriate folder and then commit it to your repository: ```bash git add Problem_1/projectile_range.png git commit -m \"Added projectile range plot\" git push origin main","title":"Problem 1: Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1-investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Problem 1: Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-motivation","text":"Projectile motion is an essential concept in physics, describing the motion of an object launched into the air under the influence of gravity. This project investigates how the range of a projectile depends on its launch angle. Understanding this relationship is crucial for applications like sports and engineering.","title":"1. Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-theory","text":"The range \\( R \\) of a projectile launched with initial velocity \\( v_0 \\) at an angle \\( \\theta \\) is given by the equation: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Where: - \\( v_0 \\) = Initial velocity (m/s) - \\( \\theta \\) = Launch angle (degrees) - \\( g \\) = Gravitational acceleration (9.81 m/s\u00b2) This formula shows that the range of a projectile depends on the launch angle, and is maximized at 45\u00b0.","title":"2. Theory"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-python-code","text":"The following Python code simulates projectile motion and calculates the range for different launch angles. The code also plots the range as a function of the angle. ```python import numpy as np import matplotlib.pyplot as plt","title":"3. Python Code"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#constants","text":"v0 = 20 # Initial velocity in m/s g = 9.81 # Gravitational acceleration in m/s\u00b2","title":"Constants"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#angle-values-0-to-90-degrees","text":"angles_deg = np.linspace(0, 90, 500) # Generating angles between 0\u00b0 and 90\u00b0 angles_rad = np.radians(angles_deg) # Converting angles from degrees to radians","title":"Angle values (0 to 90 degrees)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#calculating-the-range-for-each-angle","text":"ranges = (v0**2) * np.sin(2 * angles_rad) / g","title":"Calculating the range for each angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#plotting-the-graph","text":"plt.figure(figsize=(10, 6)) plt.plot(angles_deg, ranges, label=f'v\u2080 = {v0} m/s') # Range vs angle plot plt.axvline(45, color='red', linestyle='--', label='Max Range at 45\u00b0') # Highlight 45\u00b0 plt.title(\"Projectile Range vs. Angle of Projection\") plt.xlabel(\"Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.legend()","title":"Plotting the graph"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#save-the-plot-as-an-image","text":"plt.savefig('Problem_1/projectile_range.png')","title":"Save the plot as an image"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#show-the-plot","text":"plt.show()","title":"Show the plot"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#step-3-run-the-python-code","text":"Next, let's write and run the Python code that simulates the projectile motion and generates the plot. Run the Python code : This will create a graph and save it as projectile_range.png . The code will produce a plot and save it in the Problem_1 folder.","title":"Step 3: Run the Python Code"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#step-4-upload-the-image-to-github","text":"Once you have the image ( projectile_range.png ), upload it to your GitHub repository : Go to your GitHub repository and navigate to the Problem_1 folder. Upload the image file ( projectile_range.png ) into the Problem_1 folder. Alternatively, if you\u2019re working locally, you can copy the image into the appropriate folder and then commit it to your repository: ```bash git add Problem_1/projectile_range.png git commit -m \"Added projectile range plot\" git push origin main","title":"Step 4: Upload the Image to GitHub"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}